package dev.zalaya.jade.persistence.repository;

import dev.zalaya.jade.persistence.annotation.PersistenceTestConfiguration;
import dev.zalaya.jade.persistence.entity.ProjectEntity;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;

import static org.assertj.core.api.Assertions.assertThat;

@PersistenceTestConfiguration
class ProjectRepositoryTest {

    @Autowired
    private ProjectRepository repository;

    @Test
    void givenProjectEntity_whenSave_thenAutogeneratedFieldsAreGenerated() {
        // Given
        ProjectEntity originalProject = aProjectEntityWithDefaultNameAndPath();

        // When
        ProjectEntity persistedProject = repository.save(originalProject);

        // Then
        assertThat(persistedProject.getId()).isNotNull();
        assertThat(persistedProject.getCreatedAt()).isNotNull();
        assertThat(persistedProject.getUpdatedAt()).isNull();
    }

    @Test
    void givenPersistedProjectEntity_whenSave_thenUpdateAtIsUpdated() {
        // Given
        ProjectEntity originalProject = aProjectEntityWithDefaultNameAndPath();
        ProjectEntity persistedProject = repository.save(originalProject);
        persistedProject.setName("Updated Project");
        persistedProject.setPath("/updated-project");

        // When
        ProjectEntity updatedProject = repository.saveAndFlush(persistedProject);

        // Then
        assertThat(updatedProject.getCreatedAt()).isEqualTo(persistedProject.getCreatedAt());
        assertThat(updatedProject.getUpdatedAt()).isNotNull().isAfterOrEqualTo(persistedProject.getUpdatedAt());
    }

    private ProjectEntity aProjectEntityWithDefaultNameAndPath() {
        return ProjectEntity.builder()
            .name("Project")
            .path("/project")
            .build();
    }

}
